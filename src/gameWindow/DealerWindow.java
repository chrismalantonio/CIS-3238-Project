/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gameWindow;

import card_deck.*;
import javax.swing.JButton;
import visualManager.visualManager;

/**
 *
 * @author Chris
 */
public class DealerWindow extends javax.swing.JFrame {

    /**
     * Creates new form TestingThisWindow
     */
    Blackjack game;
    BlackjackPlayer dealer, cpu;
    Deck deck;
    visualManager v;

    private int wins, losses, ties, counter, counter2;

    public DealerWindow() {
        initComponents();
        v = new visualManager();
        game = new Blackjack();
        wins = losses = ties = 0;
        counter = 2;
        createNewGame();
    }

    public void createNewGame() {
        dealer = new BlackjackPlayer();
        cpu = new BlackjackPlayer();
        deck = new Deck();
        counter = 2;
        counter2 = 1;

        /* Initial game state */
        for (int i = 0; i < 2; i++) {
            cpu.draw(cpu.hand, deck);
            dealer.draw(dealer.hand, deck);
        }

        hideLabels();
        hit.setVisible(false);
        stay.setVisible(false);
        hitPlayer.setVisible(false);
        newGame.setVisible(false);

        record.setText("Wins: " + game.wins + " Losses: " + game.losses + " Ties: " + game.ties);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private void initComponents() {

        deal = new javax.swing.JButton();
        record = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        stay = new javax.swing.JButton();
        hit = new javax.swing.JButton();
        hitPlayer = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        for (int i = 0; i < 8; i++) {
            firstHand[i] = new javax.swing.JLabel();
        }
        for (int i = 0; i < 8; i++) {
            secondHand[i] = new javax.swing.JLabel();
        }
        for (int i = 0; i < 8; i++) {
            dealerHand[i] = new javax.swing.JLabel();
        }
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        newGame = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        deal.setText("Deal Cards");
        deal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dealButton(evt);
            }
        });

        record.setText("Wins: 0 Losses: 0 Ties: 0");

        stay.setText("Stay");
        stay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stayButton(evt);
            }
        });

        hit.setText("Hit");
        hit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hitButton(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(stay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(hit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 48, Short.MAX_VALUE)
                                .addComponent(hit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stay))
        );

        hitPlayer.setText("Hit Player");
        hitPlayer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hitPlayerButton(evt);
            }
        });

        firstHand[0].setText("jLabel1");

        firstHand[1].setText("jLabel2");

        firstHand[2].setText("jLabel3");

        firstHand[3].setText("jLabel4");

        firstHand[4].setText("jLabel5");

        firstHand[5].setText("jLabel6");

        firstHand[6].setText("jLabel7");

        firstHand[7].setText("jLabel8");

        secondHand[0].setText("jLabel9");

        secondHand[1].setText("jLabel10");

        secondHand[2].setText("jLabel11");

        secondHand[3].setText("jLabel12");

        secondHand[4].setText("jLabel13");

        secondHand[5].setText("jLabel14");

        secondHand[6].setText("jLabel15");

        secondHand[7].setText("jLabel16");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(secondHand[0])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(secondHand[1])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(secondHand[2])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(secondHand[3])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(secondHand[4])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(secondHand[5])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(secondHand[6])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(secondHand[7])
                                .addGap(18, 18, 18)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(secondHand[0])
                                        .addComponent(secondHand[1])
                                        .addComponent(secondHand[2])
                                        .addComponent(secondHand[3])
                                        .addComponent(secondHand[4])
                                        .addComponent(secondHand[5])
                                        .addComponent(secondHand[6])
                                        .addComponent(secondHand[7]))
                                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(firstHand[0])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(firstHand[1])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(firstHand[2])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(firstHand[3])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(firstHand[4])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(firstHand[5])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(firstHand[6])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(firstHand[7])
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(firstHand[0])
                                        .addComponent(firstHand[1])
                                        .addComponent(firstHand[2])
                                        .addComponent(firstHand[3])
                                        .addComponent(firstHand[4])
                                        .addComponent(firstHand[5])
                                        .addComponent(firstHand[6])
                                        .addComponent(firstHand[7]))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        dealerHand[0].setText("jLabel17");

        dealerHand[1].setText("jLabel18");

        dealerHand[2].setText("jLabel19");

        dealerHand[3].setText("jLabel20");

        dealerHand[4].setText("jLabel21");

        dealerHand[5].setText("jLabel22");

        dealerHand[6].setText("jLabel23");

        dealerHand[7].setText("jLabel24");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(dealerHand[0])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dealerHand[1])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dealerHand[2])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dealerHand[3])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dealerHand[4])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dealerHand[5])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dealerHand[6])
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dealerHand[7])
                                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(dealerHand[0])
                                        .addComponent(dealerHand[1])
                                        .addComponent(dealerHand[2])
                                        .addComponent(dealerHand[3])
                                        .addComponent(dealerHand[4])
                                        .addComponent(dealerHand[5])
                                        .addComponent(dealerHand[6])
                                        .addComponent(dealerHand[7]))
                                .addContainerGap(43, Short.MAX_VALUE))
        );

        newGame.setText("New Game");
        newGame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newGameButton(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(record))
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(332, 332, 332)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(deal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(hitPlayer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(newGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(record)
                                .addGap(50, 50, 50)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)
                                .addComponent(newGame)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hitPlayer)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap())
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(98, 98, 98))))
        );

        pack();
    }

    private void hitButton(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hitButton
        dealer.hit(dealer.hand, deck);
        int i = dealer.hand.cards.size() - 1;
        dealerHand[i].setIcon(new javax.swing.ImageIcon(getClass().getResource(getCard(dealer.hand, i))));
        dealerHand[i].setVisible(true);
        if (dealer.hand.count >= 21) {
            hit.setVisible(false);
        }
    }//GEN-LAST:event_hitButton

    private void stayButton(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stayButton
        // TODO add your handling code here:
        updateRecord();
        newGame.setVisible(true);
        hit.setVisible(false); 
        stay.setVisible(false);
    }//GEN-LAST:event_stayButton

    private void dealButton(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dealButton
        firstHand[0].setIcon(new javax.swing.ImageIcon(getClass().getResource(getCard(cpu.hand, 0))));
        firstHand[1].setIcon(new javax.swing.ImageIcon(getClass().getResource(getCard(cpu.hand, 1))));
        dealerHand[0].setIcon(new javax.swing.ImageIcon(getClass().getResource(getCard(dealer.hand, 0))));
        dealerHand[1].setIcon(new javax.swing.ImageIcon(getClass().getResource(getCard(dealer.hand, 1))));
        firstHand[0].setVisible(true);
        firstHand[1].setVisible(true);
        dealerHand[0].setVisible(true);
        dealerHand[1].setVisible(true);
        deal.setVisible(false);
        hitPlayer.setVisible(true);
        game.cpuBestChoice(cpu, deck);
    }//GEN-LAST:event_dealButton

    private void hitPlayerButton(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hitPlayerButton
        //update card label 
        //if cpu splits, update both hands
        //afterwards, if hand2 isnt empty update both hands
        if (cpu.hand.cards.size() == 2) {
            hitPlayer.setVisible(false);
            hit.setVisible(true);
            stay.setVisible(true);
        }

        if (!cpu.hand2.cards.isEmpty() && counter2 == 1) {
            secondHand[0].setIcon(new javax.swing.ImageIcon(getClass().getResource(getCard(cpu.hand2, 0))));
            secondHand[1].setIcon(new javax.swing.ImageIcon(getClass().getResource(getCard(cpu.hand2, 1))));
            firstHand[1].setIcon(new javax.swing.ImageIcon(getClass().getResource(getCard(cpu.hand, 1))));
            secondHand[0].setVisible(true);
            secondHand[1].setVisible(true);
            counter2++;
        } else if (cpu.hand.cards.size() > 2 && counter < cpu.hand.cards.size()) {
            firstHand[counter].setIcon(new javax.swing.ImageIcon(getClass().getResource(getCard(cpu.hand, counter))));
            firstHand[counter].setVisible(true);
            counter++;
        } else if (!cpu.hand2.cards.isEmpty() && cpu.hand2.cards.size() > 2 && counter2 < cpu.hand2.cards.size()) {
            secondHand[counter2].setIcon(new javax.swing.ImageIcon(getClass().getResource(getCard(cpu.hand2, counter2))));
            secondHand[counter2].setVisible(true);
            counter2++;
        }
        
        if (counter == cpu.hand.cards.size() && (counter2 == cpu.hand2.cards.size() || cpu.hand2.cards.size() == 0)) {
            hitPlayer.setVisible(false);
            if (cpu.hand.count > 21 || dealer.hand.count > cpu.hand.count){
                hit.setVisible(false);
            } else {
                hit.setVisible(true);
            }
            stay.setVisible(true);
        }
    }//GEN-LAST:event_hitPlayerButton

    private void newGameButton(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newGameButton
        createNewGame();
        deal.setVisible(true);
    }//GEN-LAST:event_newGameButton
    private String getCard(Hand h, int index) {
        return v.getCardLocation(h.cards.get(index));
    }

    private void hideLabels() {
        for (int i = 0; i < 8; i++) {
            firstHand[i].setText("");
            secondHand[i].setText("");
            dealerHand[i].setText("");
            firstHand[i].setVisible(false);
            secondHand[i].setVisible(false);
            dealerHand[i].setVisible(false);
        }

    }

    private void updateRecord() {
        this.wins = game.wins;
        this.ties = game.ties;
        this.losses = game.losses;
        game.decideWinner(cpu, dealer);
        if (cpu.hand2.cards.isEmpty()) {
            if (game.wins > this.wins) {
                record.setText("You win!");
                wins++;
            } else if (game.ties > this.ties) {
                record.setText("You tied.");
            } else {
                record.setText("You lost...");
            }
        } else {
            if (game.wins - this.wins == 2) {
                record.setText("You beat both hands!");
                wins += 2;
            } else if (game.ties - this.ties == 2) {
                record.setText("You tied both hands.");
                ties += 2;
            } else if (game.losses - this.losses == 2) {
                record.setText("You lost both hands...");
                losses += 2;
            } else if (game.wins - this.wins == 1 && game.losses - this.losses == 1) {
                record.setText("You beat one hand and lost the other.");
                wins++;
                losses++;
            } else if (game.wins - this.wins == 1 && game.ties - this.ties == 1) {
                record.setText("You beat one hand and tied the other.");
                wins++;
                ties++;
            } else if (game.ties - this.ties == 1 && game.losses - this.losses == 1) {
                record.setText("You tied one hand and lost the other.");
                ties++;
                losses++;
            }
        }
    }

    /* Use these function for testing purposes */
    public void hitButton() {
        this.hitButton(null);
    }

    public void stayButton() {
        this.stayButton(null);
    }

    public void dealButton() {
        this.dealButton(null);
    }

    public void hitPlayerButton() {
        this.hitPlayerButton(null);
    }

    public void newGameButton() {
        this.hitPlayerButton(null);
    }
    
    public JButton getStay(){
        return this.stay; 
    }

    private javax.swing.JButton deal;
    private javax.swing.JButton hit;
    private javax.swing.JButton hitPlayer;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton newGame;
    private javax.swing.JLabel record;
    private javax.swing.JButton stay;
    javax.swing.JLabel[] firstHand = new javax.swing.JLabel[8];
    javax.swing.JLabel[] secondHand = new javax.swing.JLabel[8];
    javax.swing.JLabel[] dealerHand = new javax.swing.JLabel[8];

}
